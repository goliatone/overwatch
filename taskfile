#!/bin/bash
PATH=./backend/node_modules/.bin:$PATH

##########################################
# Development
##########################################

function dev:clean {
    [ -d "backend/node_modules" ] && rm -r backend/node_modules
    [ -d "frontend/node_modules" ] && rm -r frontend/node_modules
    [ -d "build" ] && rm -r build

    rm -r backend/*.log
    rm -r ./backend/modules/server/public/build
    rm ./data/*.json
    rm -r dist
}

function dev:install {
    pushd backend
    npm i 
    popd
    pushd frontend
    npm i 

    data:json
}

function data:json {
    # csv2json ./data/sacramento.01.2006.csv ./data/crime_data.json
    # TODO use json2csv
    csv2json ./data/SacramentocrimeJanuary2006.csv ./data/sources/crime_data.json
    ./backend/bin/format-data > ./backend/data/crime.json
}

function dev:test {
    pushd backend
    npm run test
    popd

    pushd frontend
    npm run test 
    popd
} 

function dev:frontend {
    pushd ./frontend
    npm run build
    popd

    mkdir -p ./backend/modules/server/public/build
    cp ./frontend/public/* ./backend/modules/server/public/build
    rm -f ./backend/modules/server/public/index.html
}

function dev:docker {
    NAME=goliatone/crime-visualization-backend
    docker build --tag "$NAME" .
}

function dev:run {
    NAME=goliatone/crime-visualization-backend
    docker run -it --rm --env-file ./backend/.envset -p 4981:1981 -p 9090:9090 -d "$NAME"
}

##########################################
# Release build
##########################################

function release:bundle {
    mkdir -p ./dist
    git archive --format=zip HEAD -o ./dist/visualization_project.zip
}

function release:docker {
    pushd ./backend || echo "faild pushd"
    VERSION=$(npm version patch)
    popd
    NAME=goliatone/crime-visualization-backend
    docker build --no-cache --tag "$NAME" .
}

function help {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | grep -v '^_' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}  