{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Map.svelte",
    "../../SearchBar.svelte",
    "../../List.svelte",
    "../../Header.svelte",
    "../../Tags.svelte"
  ],
  "sourcesContent": [
    "<script>\n  \timport Map from './components/Map.svelte';\n    import List from './components/List.svelte';\n    import Search from './components/SearchBar.svelte';\n</script>\n\n<style>\n  .container {\n    height: 100vh;\n    display: flex;\n  }\n\n  .pane {\n    display: flex;\n    flex-direction: column;\n    max-height: 100vh;\n  }\n\n  .left {\n    align-items: center;\n    width: 30%;\n    /* max-width: 385px;  HOW TO APPLY THIS AND HAVE RIGHT TAKE THE REST?*/\n    justify-content: center;\n  }\n\n  .right {\n    justify-content: space-between;\n    width: 70%;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"pane left\">\n    <List />\n  </div>\n  <div class=\"pane right\">\n    <Search />\n    <Map />\n  </div>\n</div>\n",
    "<svelte:head>\n    <link href=\"https://api.tiles.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.css\" rel=\"stylesheet\" />\n</svelte:head>\n<script>\n    import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\n    import { onMount, onDestroy } from 'svelte';\n\n    import { activeListItem, activeMapItem } from '../stores.js';\n    import incidents, {incidentItems} from '../stores/incidents';\n    import { accessToken, activeCity, categoryOptions } from '../consts.js';\n    // import LayerSelectorControl from '../mapbox-pugins/layer-selector.js';\n\n    let map;\n\n    /**\n     * We use this to filter out by type\n     */ \n    const layerIDs = [];\n\n    /**\n     * For each list item we generate an object with props for \n     * the given feature. Here we store metadata for each item\n     * so we can access it later when we interact with list items\n     * e.g. on click\n     */ \n    function generateFeature({ address, description, coordinates, codeLabel }, index) {\n        let {color, icon} = categoryOptions[codeLabel] || categoryOptions.other;\n\n        return {\n            type: 'Feature',\n            properties: {\n                description: `\n                    <h3>${description}</h3>\n                    <p>${address}</p>\n                `,\n                id: index,\n                icon,\n                color,\n                codeLabel\n            },\n            geometry: {\n                type: 'Point',\n                coordinates\n            }\n        };\n    }\n\n    /**\n     * Update current data source. \n     * This will render all new features\n     * TODO: Why does this function get triggered multiple times\n     * befoe we have map and for so long?!\n     */ \n    function updateDataSource(features=[]) {\n        if(!map.loaded()) {\n            // console.info('update source with map not loaded...');\n            return setTimeout(_ => {\n                updateDataSource(features);\n            }, 400);\n        }\n\n        map.getSource('places.source').setData({\n            type: 'FeatureCollection',\n            features: features.map(addFeature)\n        });\n\n        /**\n         * Animate map on first render\n         */ \n        map.flyTo({ \n            center: features[0].coordinates,\n            // essential: true,\n            curve: 1,\n            // speed: 0.9,\n            bearing: 0,\n            duration: 5200,\n            // zoom: 9,\n            // pitch: 0\n        });\n    }\n    window.updateDataSource = updateDataSource;\n\n    function initializeMap() {\n        mapboxgl.accessToken = accessToken;\n\n        /**\n         * dark-v10\n         * light-v10\n         */\n        const mapOptions =  {\n            container: 'map',\n            style: 'mapbox://styles/mapbox/dark-v10?optimize=true',\n            zoom: 15,\n            minZoom: 7,\n            maxZoom: 20,\n            pitch: 0, // pitch in degrees\n            bearing: 30, // bearing in degrees\n            center: activeCity.center,\n            attributionControl: false,\n            /*maxBounds: [\n                [139.4821420801062, 35.37806665620483], // Southwest\n                [140.02948630731896, 35.86424358430297] // Northeast\n            ]*/\n        };\n\n        const onLoadQuery = { page: 1, size: 200 };\n    \n        map = new mapboxgl.Map(mapOptions);\n        const nav = new mapboxgl.NavigationControl();\n        \n        window.mapRef = map;\n        \n        map.addControl(nav, 'top-right');\n\n        /*\n        const layerSelector = new LayerSelectorControl({\n            layers: ['poi-theft', 'poi-burglary', 'poi-forgery', 'poi-other']\n        });\n        map.addControl(layerSelector, 'bottom-right');\n        */\n\n        map.on('load', async _ => {\n\n            /**\n             * Add source \n             */ \n            map.addSource('places.source', {\n                type: 'geojson',\n                data: {\n                    type: 'FeatureCollection',\n                    features: []\n                }\n            });\n\n            // addHeatMap();\n\n            /**\n             * Query backend for our first page of items\n             */ \n            await incidents.listItems('sacramento', onLoadQuery);\n        });\n    }\n\n    function addHeatMap() {\n        //https://docs.mapbox.com/mapbox-gl-js/example/heatmap-layer/\n        map.addLayer({\n            id: 'incidents-heat',\n            type: 'heatmap',\n            source: 'places.source',\n            maxzoom: 15,\n            paint: {\n                // increase weight as diameter breast height increases\n                'heatmap-weight': {\n                    property: 'dbh',\n                    type: 'exponential',\n                    stops: [\n                        [1, 0],\n                        [62, 1]\n                    ]\n                },\n                // increase intensity as zoom level increases\n                'heatmap-intensity': {\n                    stops: [\n                        [11, 1],\n                        [15, 3]         \n                    ]\n                },\n                // assign color values be applied to points depending on their density\n                'heatmap-color': [\n                    'interpolate',\n                    ['linear'],\n                    ['heatmap-density'],\n                    0, 'rgba(236,222,239,0)',\n                    0.2, 'rgb(208,209,230)',\n                    0.4, 'rgb(166,189,219)',\n                    0.6, 'rgb(103,169,207)',\n                    0.8, 'rgb(28,144,153)'\n                ],\n                // increase radius as zoom increases\n                'heatmap-radius': {\n                    stops: [\n                        [11, 15],\n                        [15, 20]\n                    ]\n                },\n                // decrease opacity to transition into the circle layer\n                'heatmap-opacity': {\n                    default: 1,\n                    stops: [\n                        [14, 1],\n                        [15, 0]\n                    ] \n                },\n            }\n        });\n    }\n\n    function addFeature(incident, index) {\n        /**\n         * Make our feature\n         */ \n        const feature = generateFeature(incident, index);\n        const color = feature.properties.color;\n        const symbol = feature.properties.icon;\n        const label = feature.properties.codeLabel;\n\n        const layerID = `poi-${label}`;\n        \n        if(!map.getLayer(layerID))  addLayer(layerID, symbol, label, color);\n\n        return feature;\n    }\n\n    function addLayer(layerID, symbol, label, color='#000000') {\n\n        map.addLayer({\n            id: layerID,\n            type: 'symbol',\n            source: 'places.source',\n            layout: {\n                'icon-image': `${symbol}-15`,\n                'icon-size': 2,\n                //This only works with SDF(?) icons\n                //@see https://github.com/mapbox/mapbox-gl-js/issues/1817#issuecomment-497446984\n                // 'icon-color': color,\n                'icon-allow-overlap': true,\n                'text-field': label,\n                'text-font': [\n                    'Open Sans Bold',\n                    'Arial Unicode MS Bold'\n                ],\n                'text-size': 11,\n                'text-transform': 'uppercase',\n                'text-letter-spacing': 0.05,\n                'text-offset': [0, 1.5]\n            },\n                'paint': {\n                'text-color': '#202',\n                'text-halo-color': '#fff',\n                'text-halo-width': 2\n            },\n            filter: ['==', 'icon', symbol]\n        });\n            \n        layerIDs.push(layerID);\n\n        /**\n         * Manage Popup on click\n         */ \n        map.on('click', layerID, function({ features }) {\n            const match = features[0];\n            const coordinates = match.geometry.coordinates.slice();\n\n            setActiveMapItem(match.properties.id);\n            setActiveListItem(match.properties.id);\n        });\n\n        /**\n         * Feature should show pointer on hover\n         */\n        map.on('mouseenter', layerID, _=> {\n            map.getCanvas().style.cursor = 'pointer';\n        });\n\n        /**\n         * Remove cursor\n         */\n        map.on('mouseleave', layerID, _=> {\n            map.getCanvas().style.cursor = '';\n        });\n    }\n\n    /**\n     * Use reactivity to update map center when active \n     * item is updated via list, we update using store.\n     */\n    const unsubscribeActiveMapItem = activeMapItem.subscribe(newActiveMapItem => {\n        if (map) {\n            const item = $incidentItems[newActiveMapItem];\n\n            showPopup(item);\n\n            flyTo(item.coordinates);\n        }\n    });\n\n    function showPopup(item) {\n        const popUps = document.getElementsByClassName('mapboxgl-popup');\n        if (popUps[0]) popUps[0].remove();\n\n        let description = `\n            <h3>${item.description}</h3>\n            <p>${item.address}</p>\n        `;\n\n        new mapboxgl.Popup()\n            .setLngLat(item.coordinates)\n            .setHTML(description)\n            .addTo(map);\n    }\n\n    function flyTo(coordinates) {\n        map.flyTo({ \n            center: coordinates,\n            // essential: true,\n            curve: 1,\n            // speed: 0.8,\n            pitch: 60,\n            bearing: 0,\n            duration: 3200,\n            // zoom: 9,\n        });\n    }\n\n    function setActiveListItem(id) {\n        activeListItem.set(id);\n    }\n\n    function setActiveMapItem(id) {\n        activeMapItem.set(id);\n    }\n\n    function toggleLayerVisibility(layerID, visible=false) {\n        const prop = visible ? 'visible' : 'none';\n        layerIDs.forEach(function(layerID) {\n            map.setLayoutProperty(layerID, 'visibility', prop);\n        });\n    }\n\n    window.layerIDs = layerIDs;\n    window.incidents = incidents;\n    window.toggleLayerVisibility = toggleLayerVisibility;\n\n    /**\n     * Livecycle handler, register map on first\n     * render.\n     */ \n    onMount(initializeMap);\n\n    /**\n     * Remove listener on unmount\n     */ \n    onDestroy(unsubscribeActiveMapItem);\n\n    $: if($incidentItems.length > 0) updateDataSource($incidentItems);\n\n</script>\n\n<style>\n    #map {\n        width: 100%;\n        height: 100%;\n        background-color: #393838;\n    }\n\n    #map:before {\n        box-shadow: 20px 0 10px -10px rgba(0, 0, 0, 0.15) inset;\n        content: '';\n        height: 100%;\n        left: 0;\n        position: absolute;\n        width: 20px;\n        z-index: 1000;\n    }\n</style>\n\n<div id=\"map\"></div>\n",
    "<script>\n    import {filters} from '../stores/filters';\n    import incidents from '../stores/incidents';\n    import {categories} from '../consts';\n\n    import Tags from './Tags.svelte'\n\n    /**\n     * We want to use TAB, ENTER, and COMMA\n     */ \n    let addKeys = [9,13,188];\n\n    function handleTagProperties(e) {\n        let tags = e.detail.tags;\n        $filters = tags;\n    }\n    //on:keyup={handleKeyup}\n    function handleKeyup(e) {\n        if(event.keyCode !== 13) return;\n        const value = e.target.value.trim().toLowerCase();\n        \n        if(value === '') $filters = [];\n\n        if(categories.indexOf(value) > -1 && $filters.indexOf(value) === -1) {\n            $filters = [...$filters, value];\n        }\n    }\n\n    const unsubscribeFilters = filters.subscribe(newFilters => {\n        const onLoadQuery = { page: 1, size: 200 };\n        \n        if(newFilters && newFilters.length > 0) {\n            onLoadQuery.where = {codeLabel: newFilters};\n        }\n        // const onLoadQuery = { page: 1, size: 200, where: {codeLabels: $filters} };\n        incidents.listItems('sacramento', onLoadQuery);\n    });\n\n</script>\n\n<style>\n.filter-ctrl {\n    position: absolute;\n    top: 10px;\n    margin-left: 10px;\n    /* right: 50px; */\n    z-index: 1;\n}\n/* \n.filter-ctrl input[type='text'] {\n    font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\n    width: 100%;\n    border: 0;\n    background-color: #fff;\n    margin: 0;\n    color: rgba(0, 0, 0, 0.5);\n    padding: 10px;\n    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n    border-radius: 3px;\n    width: 180px;\n}*/\n</style>\n\n<div class=\"filter-ctrl\">\n    <!-- <input  id=\"filter-input\"\n            on:keypress={handleKeyup}\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Filter by name\"\n    /> -->\n\n\n\n    <Tags   {addKeys} \n            onlyUnique={true} \n            autoComplete={categories} \n            on:tags={handleTagProperties}\n            placeholder=\"Filter by category\"\n            />\n</div>",
    "<script>\n    import inView from 'in-view';\n    import { onDestroy } from 'svelte';\n    import { fly, fade } from 'svelte/transition';\n    \n    import Header from './Header.svelte';\n    import debounce from '../utils/debounce';\n    import incidents, {incidentItems, error, metadata} from '../stores/incidents';\n    import { activeListItem, activeMapItem } from '../stores.js';\n    import { activeCity } from '../consts.js';\n\n    import pagination, {currentPage, totalPages, totalItems, currentItems, itemsPerPage} from '../stores/pagination';\n\n    let listRef;\n\n    // Update list scroll position when active list item is updated via map\n    const unsubscribeActiveListItem = activeListItem.subscribe(newActiveListItem => {\n        if (listRef) {\n            const activeItem  =document.getElementById(\n                `list-item-${newActiveListItem}`\n            );\n            listRef.scrollTo({\n                top: activeItem.offsetTop - 130,\n                behavior: 'smooth'\n            });\n        }\n    });\n    //TODO: Implement infinite scroll https://github.com/andrelmlins/svelte-infinite-scroll\n    function setActiveMapItem(index) {\n        activeMapItem.set(index);\n    }\n\n    /**\n     * Remove listener on unmount\n     */ \n    onDestroy(unsubscribeActiveListItem);\n\n    let visible = false;\n\n    $: visible = $incidentItems && $incidentItems.length;\n    $: pagination.update($metadata);\n    $: incidents.listItems(activeCity.name, {page: $currentPage, size:200});\n</script>\n\n<style>\n    #list-items {\n        display: flex;\n        flex-wrap: wrap;\n        overflow: scroll;\n    }\n\n    .list-item-wrapper {\n        width: 100%;\n        border-left: 1px solid #f6f6fc;\n        border-bottom: #ccc solid 1px;\n        cursor: pointer;\n    }\n\n    .list-item-wrapper.active { \n        border-left: 4px solid #ff3377;\n        transition: border-width 0.2s ease-out;\n    }\n\n    .list-item {\n        /* font-family: Helvetica, Arial, sans-serif;\n        font-size: 1.2em;\n        line-height: 1.5em; */\n        margin: 0px 40px 0px 40px;\n        padding-top: 16px;\n        padding-bottom: 14px;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .list-item .description {\n        font-size: 1.2em;\n        line-height: 1.3em;\n        padding-bottom: 8px;\n    }\n\n    .list-item .meta {\n        font-size: 0.8em;\n        font-weight: 400;\n        line-height: 1.4em;\n    }\n\n    .list-item .meta small {\n        font-weight: bold;\n    }\n\n    .error,\n    .loader {\n        margin: 30px 40px;\n    }\n\n    .error {\n        color: #f14668;\n        font-weight: 700;\n    }\n\n    .tail {\n        margin: 20px 40px;\n        padding-bottom: 40px;\n    }\n\n    .footer {\n        /* position: absolute; */\n        position: -webkit-sticky;\n        position: sticky; \n        bottom: 0px;\n        height: 40px;\n        width:100%;\n        background-color:#252529;\n        padding: 20px 40px;\n    }\n\n    .pagination {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        max-width: 300px;\n        margin: 0 auto;\n    }\n\n    .pagination > button {\n       font-size: 12px;\n       padding: 4px 10px;\n    }\n    .pagination .count {\n        color: #f6f6fc;\n        font-weight: 700;\n        font-size: 12px;\n        line-height: 25px;\n    } \n</style>\n\n<div id=\"list-items\" bind:this=\"{listRef}\" class=\"{visible ? 'open' : ''}\">\n    <Header doAnimate={!visible}/>\n\n{#if visible}\n    {#each $incidentItems as listItem, index}\n    <div on:click={_=>setActiveMapItem(index)} class=\"list-item-wrapper {listItem.codeLabel} {$activeMapItem === index ? 'active': ''}\" id=\"list-item-{index}\" transition:fly=\"{{ y: 60, duration: 400 }}\">\n        <div class=\"list-item\">\n            <span class=\"description\">{listItem.description}</span>\n            <div class=\"meta\">\n                <small>Reported on </small><span class=\"date\">{listItem.date}</span> <small>At</small> <span class=\"address\">{listItem.address}</span>\n            </div>\n            <span class=\"tag code\">{listItem.codeLabel}</span>\n        </div>\n    </div>\n  {/each}\n{:else}\n    {#if $error}\n        <div class=\"error\">{@html $error}</div>\n    {:else}\n        <div class=\"loader\">Loading...</div>\n    {/if}\n{/if}\n\n  <div class=\"tail\">\n    <p>Project by Emiliano Burgos a.k.a <a href=\"https://github.com/goliatone\" target=\"_blank\">goliatone</a></p>\n    <p>Read more in the <a href=\"/about\" target=\"_blank\">about page</a></p>\n    <i>List of crimes reported in Sacramento during 01/01/06 and 01/02/06.</i>\n  </div>\n\n{#if visible}\n  <div class=\"footer\" transition:fly=\"{{ y: 40, duration: 600 }}\">\n    <div class=\"pagination\">\n        <button on:click={pagination.first}>First</button>\n        <button on:click={pagination.prev}>Prev</button>\n        <div class=\"count\">\n            <span>{$currentPage}</span> of <span>{$totalPages}</span>\n        </div>\n        <button on:click={pagination.next}>Next</button>\n        <button on:click={pagination.last}>Last</button>\n    </div>\n  </div>\n{/if}\n\n</div>\n",
    "<script>\n\n    const totalFrames = 3;\n    const animationDuration = 1300;\n    const timePerFrame = 100;\n\n    let lastUpdated;\n    let timeSinceLastUpdate;\n    let frameNumber = 2;\n    \n    let cycles = 0;\n    let maxCycles = 3;\n    let nextAnimation; \n    let tid;\n\n    export let doAnimate = false;\n    export let showVersion = true;\n\n    export function start() {\n        doAnimate = true;\n        maxCycles = random(2, 8);\n        nextAnimation = random(1000, 30000);\n        requestAnimationFrame(step);\n    }\n\n    export function stop() {\n        doAnimate = false;\n        frameNumber = 2;\n        showVersion = false;\n        // clearTimeout(tid);\n        // if(nextAnimation) tid = setTimeout(start, nextAnimation);\n    }\n\n    function random(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    function step(startTime) {\n        \n        if (!lastUpdated) lastUpdated = startTime;\n\n        timeSinceLastUpdate = startTime - lastUpdated;\n\n        if (timeSinceLastUpdate > timePerFrame) {\n            lastUpdated = startTime;\n            if (frameNumber >= totalFrames) {\n                cycles++;\n                frameNumber = 1;\n            } else {\n                frameNumber = frameNumber + 1;\n            }\n        }\n\n        if(doAnimate) {\n            if(cycles <= maxCycles) requestAnimationFrame(step);\n            else stop();\n        }\n    }\n\n    $: {\n        if(doAnimate) start();\n    }\n\n    window.animateEye = step;   \n\n</script>\n\n<style>\n    .head {\n        position: sticky;\n        position: -webkit-sticky;\n        top: 0;\n        width: 100%;\n        align-self: flex-start;\n        background-color: #f6f6fc;\n    }\n    .title {\n        margin: 30px 40px;\n        display: flex;\n        flex-direction: row;\n    }\n\n    .title > .logo > img {\n        width: 48px;\n        padding-right: 6px;\n    }\n\n    .version {\n        font-weight: 700;\n        font-size: .5em;\n        padding: 5px 10px;\n        color: #f6f6fc;\n        background-color: #00d1b2;\n        height: 10px;\n        border-radius: 3px;\n        margin-left: 20px;\n        transition: opacity 1s ease-in-out;\n        opacity: 1;\n    }\n\n    .hide {\n        opacity: 0;\n    }\n\n    h2 {\n        font-family: Helvetica, Arial, sans-serif;\n        text-transform: capitalize;\n        /** this is to compensate for the icons attribution padding **/\n        line-height: 16px; \n    }\n</style>\n\n<div class=\"head\">\n    <div class=\"title\">\n        <span class=\"logo\"><img src=\"/images/eye-0{frameNumber}.svg\" alt=\"logo\"/></span>\n        <h2>Overwatch</h2>\n        <div class=\"version {showVersion ? '' : 'hide'}\">v0.0.9</div>\n    </div>\n  </div>",
    "<script>\n    import {createEventDispatcher} from 'svelte';\n        \n    const dispatch = createEventDispatcher();\n\n    let tag;\n    let tid;\n    let container;\n    let liIndex = -1;\n    let removeComma = false;\n    let matchedElements = [];\n\n    export let tags;\n    export let addKeys;\n    export let maxTags;\n    export let onlyUnique;\n    export let removeKeys;\n    export let placeholder;\n    export let allowPaste;\n    export let allowDrop;\n    export let splitWith;\n    export let autoComplete;\n    export let dropdownTimeout;\n\n    /**\n     * More here https://keycode.info/\n     */ \n    const CODES = {\n        BACKSPACE: 8,\n        TAB: 9,\n        ENTER:13,\n        ARROW_UP: 38,\n        ARROW_DOWN: 40,\n        COMMA: 188,\n    };\n\n    $: tags = tags || [];\n    $: addKeys = addKeys || false;\n    $: maxTags = maxTags || false;\n    $: onlyUnique = onlyUnique || false;\n    $: removeKeys = removeKeys || false;\n    $: placeholder = placeholder || '';\n    $: allowPaste = allowPaste || false;\n    $: allowDrop = allowDrop || false;\n    $: splitWith = splitWith || ',';\n    $: autoComplete = autoComplete || false;\n    $: dropdownTimeout = dropdownTimeout || false;\n\n    function setTag(event) {\n        // handleKeyPress(event);\n        const keyCode = event.keyCode;\n        let currentTag = event.target.value;\n\n        //On ENTER press we add the tag\n        if(keyCode === CODES.ENTER) {\n            if(matchedElements.length > 0) {\n                let index = liIndex === -1 ? 0 : liIndex;\n                currentTag = matchedElements[index];\n            }\n\n            return addTag(currentTag);\n        }\n        \n        //If we BACKSPACE when there's no text then remove previous tag\n        if(keyCode === CODES.BACKSPACE && tag === '') {\n            tags.pop();\n            tags = tags;\n            liIndex = -1;\n            dispatch('tags', {tags});\n        }\n        \n        /**\n         * We can add tags by:\n         * - type tag + hitting ENTER\n         * - type tag + hitting TAB\n         * - type tag + typing \",\" between tags\n         * - type tag + typing random key added to addKeys[]\n         */\n        if(Array.isArray(addKeys)) {\n            addKeys.forEach(key => {\n                if(key !== keyCode) return;\n                switch (keyCode) {\n                    case CODES.COMMA:\n                        /**\n                         * We want to remove the trailing comma before\n                         * we add the word as a tag\n                         */ \n                        removeComma = true;\n                        addTag(_trimTrailing(currentTag, ','));\n                        break;\n                    case CODES.TAB:\n                        event.preventDefault();\n                        let index = liIndex === -1 ? 0 : liIndex;\n                        let match = matchedElements[index];\n                        addTagFromDropdown(currentTag, match);\n                        break;\n                    default:\n                        addTag(currentTag);\n                        break;\n                }\n            });\n        }\n        \n        if(Array.isArray(removeKeys)) {\n            removeKeys.forEach(key => {\n                if(key !== keyCode) return;\n                tags.pop();\n                tags = tags;\n                tag = '' ;\n                liIndex = -1;\n                dispatch('tags', {tags});\n            });\n        }\n    }\n\n    function addTagFromDropdown(currentTag, match) {\n        if(match) {\n            if(currentTag === match) {\n                tag = '';\n            } else if(match.indexOf(currentTag) !== -1) {\n                currentTag = tag = match;\n            }\n        }\n\n        if(onlyUnique) {\n            matchedElements = matchedElements.filter(m => m !== currentTag );\n        }\n        \n        addTag(currentTag);\n    }\n\n    function addTag(currentTag='') {\n        currentTag = currentTag.trim();\n        if(!currentTag) return;\n        \n        //TODO: We might want to move this to a function where we check\n        if(maxTags && tags.length === maxTags) return;\n\n        if(onlyUnique && tags.includes(currentTag)) return;\n\n        tags.push(currentTag);\n        tags = tags;\n        tag = '';\n        liIndex = -1;\n        dispatch('tags', {tags});\n    }\n\n    function removeTag(i) {\n        tags.splice(i, 1);\n        tags = tags;\n        liIndex = -1;\n        dispatch('tags', {tags});\n    }\n\n    /**\n     * Handle pasting a string on tags in our field\n     * https://developer.mozilla.org/en-US/docs/Web/API/Element/paste_event\n     */ \n    function onPaste(e) {\n        if(!allowPaste) return;\n        e.preventDefault();\n        const data = getClipboardData(e);\n        const tags = splitTags(data).forEach(addTag);\n    }\n\n    function onDrop(e) {\n        if(!allowDrop) return;\n        e.preventDefault();\n        const data = e.dataTransfer.getData('Text');\n        const tags = splitTags(data).map(tag => addTag(tag));\n    }\n\n    function getClipboardData(e) {\n        if(window && window.clipboardData) {\n            return window.clipboardData.getData('text');\n        }\n        if(e.clipboardData) {\n            return e.clipboardData.getData('text/plain');\n        }\n        return '';\n    }\n\n    function splitTags(data) {\n        if(!data) return [];\n        return data.split(splitWith).map(t => t.trim());\n    }\n\n    function getMatchElements(e) {\n        if(!Array.isArray(autoComplete)) return;\n\n        let term = e.target.value;\n        if(!term) return matchedElements = [];\n\n        /**\n         * Select elements that match the given\n         * string...\n         */ \n        let matched = autoComplete.filter(item => {\n            return item.toLowerCase().includes(term.toLowerCase());\n        });\n\n        if(onlyUnique) {\n            matched = matched.filter(m => tags.indexOf(m) === -1 );\n        }\n\n        matchedElements = matched;\n    }\n\n    function handleWindowClick(event) {\n        if(!container) return;\n        const eventTarget = event.path && event.path.length > 0 ? event.path[0] : event.target;\n        if (container.contains(eventTarget)) return;\n        reset();\n    }\n\n    function reset() {\n        matchedElements = [];\n        tag = '';\n        liIndex = -1;\n    }\n\n    function handleKeyPress(event) {\n        if(!matchedElements || matchedElements.length === 0) return;\n        const keyCode = event.keyCode;\n        let el;\n        switch (keyCode) {\n            case CODES.ARROW_UP:\n                _moveActiveLi(true);\n                break;\n        \n            case CODES.ARROW_DOWN:\n                _moveActiveLi(false);\n                break;\n        }\n    }\n\n    function _moveActiveLi(up=false) {\n        let el = document.getElementById(`li-${liIndex}`);\n        if(el) el.classList.remove('active');\n        up ? liIndex-- : liIndex++;\n        el = document.getElementById(`li-${liIndex}`);\n        if(el) el.classList.add('active');\n    }\n\n    function _trimTrailing(word='', char=',') {\n        let last = word[word.length - 1];\n        if(char !== last) return word;\n        return word.substring(0, word.length - 1);\n    }\n \n    /**\n     * Handle menu suggestions close on \n     * inactive user. This should rather\n     * be an idle timeout...\n     */ \n    // $: if(matchedElements.length > 0) tid = setTimeout(reset, dropdownTimeout);\n    // $: if(matchedElements.length === 0 && tid) clearTimeout(tid);\n\n</script>\n<svelte:window on:click={handleWindowClick}\non:keydown={handleKeyPress} />\n\n<div bind:this={container}>\n    <div class=\"svelte-tags-input-layout\">\n        {#if tags.length > 0}\n            {#each tags as tag, i}\n                <span class=\"svelte-tags-input-tag tag {tag}\">{tag} \n                    <span class=\"svelte-tags-input-tag-remove\" on:click={_ => removeTag(i)}> ×</span>\n                </span>\n            {/each}\n        {/if}\n        <input  type=\"text\" \n                bind:value={tag} \n                on:keydown={setTag} \n                on:keyup={getMatchElements} \n                on:paste={onPaste} \n                on:drop={onDrop} \n                class=\"svelte-tags-input\" \n                placeholder={placeholder} />\n        \n    </div>\n\n    {#if autoComplete && matchedElements.length > 0}\n        <ul class=\"svelte-tags-input-matchs\">\n            {#each matchedElements as element, i}\n            <li id=\"li-{i}\" value=\"{element}\" on:click={_ => addTagFromDropdown(element, element)}>\n                <div>\n                    <span class=\"icon\">{element}</span>\n                </div>\n            </li>\n            {/each}\n        </ul>\n    {/if}\n</div>\n\n<style>\n/* main */\n.svelte-tags-input {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n    font-size: 14px;\n    padding: 2px 5px;\n}\n\n/* svelte-tags-input-layout */\n.svelte-tags-input-layout {\n    display:-webkit-box;\n    display:-ms-flexbox;\n    display:flex;\n    -ms-flex-wrap:wrap;\n        flex-wrap:wrap;\n    -webkit-box-align:center;\n        -ms-flex-align:center;\n            align-items:center;\n\n    /* min-width: 400px;\n    max-width: 600px;\n    flex-basis: auto; \n    flex-grow: 1; */\n\n    padding: 0px 5px 5px 5px;\n    border: solid 1px #CCC;\n    background: #f6f6fc;\n    border-radius: 2px;\n    box-shadow: 0 0 0 2px rgba(0,0,0,.1);\n}\n\n.svelte-tags-input-layout:focus,\n.svelte-tags-input-layout:hover {\n    border: solid 1px #252529;    \n}\n\n/* svelte-tags-input */\n.svelte-tags-input {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    \n    margin: 0;\n    margin-top: 5px;\n    border:none;\n    background: #f6f6fc;\n}\n\n.svelte-tags-input:focus {\n    outline:0;\n}\n\n/* svelte-tags-input-tag */\n.svelte-tags-input-tag {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n    font-size: 12px;\n    font-weight: 600;\n    padding: 4px 5px 5px 5px;\n}\n\n.svelte-tags-input-tag {\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Opera and Firefox */\n}\n\n.svelte-tags-input-tag {\n    display:-webkit-box;\n    display:-ms-flexbox;\n    display:flex;\n\n    white-space: nowrap;\n    list-style:none;\n    background: #252529;\n    color: #f6f6fc;\n    border-radius: 2px;\n    margin-right: 5px;\n    margin-top: 5px;\n}\n\n.svelte-tags-input-tag:hover {\n    /*background: #CCC;*/\n}\n\n.svelte-tags-input-tag-remove {\n    cursor:pointer;\n    padding-left: 4px;\n}\n\n/* svelte-tags-input-matchs */\n.svelte-tags-input-matchs {\n    margin: 3px 0;\n    padding: 0px;\n    border: solid 1px #CCC;\n    border-radius: 0 0 2px 2px;\n    max-height: 310px;\n    overflow: scroll;\n    overflow-x: hidden;\n}\n\n.svelte-tags-input-matchs li {\n    list-style: none;\n    padding: 5px;\n    /* border-radius: 2px; */\n    cursor: pointer;\n    background:#f6f6fc;\n}\n\n.svelte-tags-input-matchs  li.active  {\n    color:#f6f6fc;\n    background:#252529 !important;\n}\n\n.svelte-tags-input-matchs li:hover {\n    background:#252529;\n    color:#f6f6fc;\n}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}